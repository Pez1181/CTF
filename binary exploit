enumerate bin:
  file [file]
  checksec --file=[file]
source code
  cat [file]
    look for unsanitised gets function


Buffer overflow?
  Find buffer flow offset
    pwndbg> cyclic 200
        > run
        > cyclic -l [traceback address]
          "offset = ??"
  Find useful functions
    objdump -d [file] | grep system
    objdump -d [file] | grep gets@plt
    readelf -S [file] | grep .data

  Write /bin/sh into the .data section
  Call system() with address of /bin/sh

Format vuln?
  For example: printf(buf). The proper way should be printf(“%s”, &buf), or something like this
  find the address of variables that need to be overwritten
    pwndbg> nm ./intro-fmt | grep [var_name]
  find the offset
    python3 -c "print('ABCDEFGH|' + '|'.join(['%d:%%p' % i for i in range(1,40)]))" | [file] | grep 4847

ltrace [file]
  shows functions and memory when running the bin

pwndgb>start #breaks at main
pwndbg>info proc mappings
  find string compare address (base address due to PIE plus the address of the compare address) and break there
  enter any password
  pwndbg>x/32bx $rsi
    extract rsi value

  
    

